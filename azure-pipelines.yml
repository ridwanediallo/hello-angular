trigger:
- main

pool:
  name: Default

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

steps:
# Step 1: Install Node.js
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

# Step 2: Cache npm dependencies
- task: Cache@2
  inputs:
    key: 'npm | "$(Agent.OS)" | package-lock.json'
    restoreKeys: |
      npm | "$(Agent.OS)"
    path: $(npm_config_cache)
  displayName: 'Cache npm dependencies'

# Step 3: Install Angular CLI and dependencies
- script: |
    npm install -g @angular/cli
    npm install
  displayName: 'npm install'

# Step 4: Build the Angular project
- script: |
    ng build --configuration=production --output-path=dist/hello-angular
  displayName: 'Build Angular project'

# Step 5: Verify if dist folder exists
- script: |
    ls -R dist
  displayName: 'Verify dist output'

# Step 6: Copy build artifacts to the correct path
- script: |
    mkdir -p $(Build.ArtifactStagingDirectory)/drop
    cp -r dist/hello-angular/* $(Build.ArtifactStagingDirectory)/drop/
  displayName: 'Copy build artifacts'

# Step 7: Publish build artifacts
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/drop'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publish build artifacts'

# Step 8: List Published Artifacts
- script: |
    ls -R $(Build.ArtifactStagingDirectory)/drop
  displayName: 'List Published Artifacts'

# Step 9: Deploy to Your Own Server (SCP)
- script: |
    echo "$SSH_PRIVATE_KEY" > id_rsa
    chmod 600 id_rsa
    scp -r -i id_rsa $(Build.ArtifactStagingDirectory)/drop/* adiallo@10.221.6.18:/home/adiallo/test_deploy
    rm -f id_rsa
  displayName: 'Deploy to Server (SCP)'
  env:
    SSH_PRIVATE_KEY: $(SSH_PRIVATE_KEY)
